#! /bin/sh

export LD_LIBRARY_PATH=/scratch/chengbin.wang/install/log4cpp/lib:$LD_LIBRARY_PATH
#do scrub

LINE_NUMBER=`wc -l $1 | cut -f1 -d' '`
echo "Input File line number: ${LINE_NUMBER}"
BULK_LINE=`expr $LINE_NUMBER / 100`
BULK_NUMBER=`expr $LINE_NUMBER / $BULK_LINE`
remainder=`expr $LINE_NUMBER % $BULK_LINE`
if [ $? -gt 0 ]
then
BULK_NUMBER=`expr $BULK_NUMBER + 1`
fi
split -l ${BULK_LINE} $1 bulk
echo "Split Input File into $BULK_NUMBER bulks with ${BULK_LINE} lines"
(time ls) 2>&1 | grep real | cut -f2
LoadTime=`(time mpirun -np ${BULK_NUMBER} ./main SCRUB ) 2>&1 | grep real | cut -f2`
echo "[total] Data Loading and Scrubbing takes $LoadTime" >> Assignment_A.log

SignalTime=`(time find ./ -type f -name "signal.bulk*" -exec cat {} \; > signal.txt) 2>&1 | grep real | cut -f2`
echo "[total] Combine and generating Singal.txt takes $SignalTime" >> Assignment_A.log
NoiseTime=`(time find ./ -type f -name "noise.bulk*" -exec cat {} \; > noise.txt) 2>&1 | grep real | cut -f2`
echo "[total] Combine and generating noise.txt  takes $NoiseTime" >> Assignment_A.log

#do normality analysis
sort -t ',' -k1,1 signal.txt > signal.sorted
cut -f2 -d',' signal.sorted > price.txt
mpirun -np 1 ./main NORMAL

#cleanup
rm *bulk*
rm price.txt
rm signal.sorted

